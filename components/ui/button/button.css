/**
 * Button Component Styles
 * 
 * Design system choices:
 * - All variant and color logic is handled by button-tokens.css
 * - This file only contains base styles and special cases
 * - Component tokens (--button-bg, --button-text, etc.) are set by the token file
 *
 * Roundness system:
 * - Border-radius uses control roundness tokens that provide linear 1-6 mapping
 * - The roundness factor is set by the closest data-roundness attribute (theme or local).
 * - This allows for both global and per-button roundness control, using only CSS.
 */

/* ----------------------------------------
   BASE BUTTON STYLES & SIZE VARIANTS
---------------------------------------- */

.button-root {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-family: inherit;
  border: none;
  outline: none;
  cursor: pointer;
  gap: var(--size-2);
  transition: background-color 0.25s ease, border-color 0.25s ease, color 0.25s ease, box-shadow 0.25s ease, filter 0.25s ease;

  /* Use component tokens set by button-tokens.css */
  background-color: var(--button-bg);
  color: var(--button-text);
}

.button-root:hover {
  background-color: var(--button-bg-hover);
}

.button-root:active {
  background-color: var(--button-bg-pressed);
}

/* Size variants using control system tokens */
.button-size-1 {
  height: var(--control-height-1); /* Smallest */
  padding: 0 var(--control-padding-1);
  border-radius: calc(var(--control-radius-1) * var(--theme-radius-factor, 1));
}
.button-size-2 {
  height: var(--control-height-2);
  padding: 0 var(--control-padding-2);
  border-radius: calc(var(--control-radius-2) * var(--theme-radius-factor, 1));
}
.button-size-3 {
  height: var(--control-height-3);
  padding: 0 var(--control-padding-3);
  border-radius: calc(var(--control-radius-3) * var(--theme-radius-factor, 1));
}
.button-size-4 {
  height: var(--control-height-4);
  padding: 0 var(--control-padding-4);
  border-radius: calc(var(--control-radius-4) * var(--theme-radius-factor, 1));
}
.button-size-5 {
  height: var(--control-height-5);
  padding: 0 var(--control-padding-5);
  border-radius: calc(var(--control-radius-5) * var(--theme-radius-factor, 1));
}
.button-size-6 {
  height: var(--control-height-6); /* Largest */
  padding: 0 var(--control-padding-6);
  border-radius: calc(var(--control-radius-6) * var(--theme-radius-factor, 1));
}

/* ========================================
   VARIANT-SPECIFIC OVERRIDES
   ======================================== */

/* Outline variant needs border */
[data-variant="outline"] {
  border: 1px solid var(--button-border);
}
[data-variant="outline"]:hover {
  border-color: var(--button-border-hover);
}

/* Modern variant with gradient */
[data-variant="modern"] {
  background: linear-gradient(to bottom right, var(--button-bg), var(--button-bg-secondary));
  border: 1px solid var(--button-border);
  box-shadow: var(--shadow-xl);
}
[data-variant="modern"]:hover {
  background: linear-gradient(to bottom right, var(--button-bg), var(--button-bg-secondary));
  box-shadow: var(--shadow-lg);
  filter: brightness(0.95);
}
[data-variant="modern"]:active {
  background: linear-gradient(to bottom right, var(--button-bg), var(--button-bg-secondary));
  box-shadow: var(--shadow-md);
  filter: brightness(0.9);
}

/* Solid variant gets filter for pressed state */
[data-variant="solid"]:active {
  background-color: var(--button-bg); /* Reset to normal bg */
  filter: brightness(0.9);
}

/* Link variant special styling */
[data-variant="link"] {
  padding: 0;
  height: auto;
  border: none;
  background: transparent;
}
[data-variant="link"]:hover {
  background: transparent;
  text-decoration: underline;
}
